stages:
  - mirror
  - build
  - deploy

variables:
  GITHUB_REPO_URL: "https://github.com/Aquaveo/harmonica.git"
  GITLAB_REPO_URL: "https://git.aquaveo.com/Aquaveo/model-executables/harmonica-mirror.git"
  GITHUB_ORG: "Aquaveo"
  GITHUB_REPO_NAME: "harmonica"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/pip-cache"
  PYTHON: C:\\Python36

cache:
  paths:
    - "$CI_PROJECT_DIR/pip-cache"
  key: "$CI_PROJECT_ID"

mirror:
  stage: mirror
  script:
    # Set up SSH
    - ssh-agent -s
    - ssh-add %MIRROR_KEY%
    - mkdir %USERPROFILE%\.ssh
    - echo %SSH_HOSTKEYS% > %USERPROFILE%\.ssh\known_hosts

    # Mirror the Repo
    - rmdir /S /Q github
    - echo Mirroring from %GITHUB_REPO_URL%
    - git clone --bare %GITHUB_REPO_URL% github
    - cd github
    - git push --mirror %GITLAB_REPO_URL%
    - cd ..
    - rmdir /S /Q github
  only:
    - triggers

build:
  stage: build
  variables:
    PIP_INDEX_URL: "https://public.aquapy.aquaveo.com/aquaveo/stable"
  script:
    - curl -X POST -H "Content-Type:application/json" -H "Authorization:token %GITHUB_TOKEN%" https://api.github.com/repos/%GITHUB_ORG%/%GITHUB_REPO_NAME%/statuses/%CI_COMMIT_SHA% --data '{"state":"pending", "target_url":"https://git.aquaveo.com", "description":"Gitlab is processing the commit", "context":"continuous-integration/gitlab-ci"}'
    - pip.exe install coverage
    - pip.exe install -e .
    - coverage run --omit=tests/*,harmonica/cli/*,harmonica/data/*,harmonica/examples/*,*__init__.py --source=harmonica setup.py test
    - coverage html -d coverage_html
    - coverage report --fail-under 10 -m --skip-covered
    - curl -X POST -H "Content-Type:application/json" -H "Authorization:token %GITHUB_TOKEN%" https://api.github.com/repos/%GITHUB_ORG%/%GITHUB_REPO_NAME%/statuses/%CI_COMMIT_SHA% --data '{"state":"success", "target_url":"https://git.aquaveo.com", "description":"The build succeeded!", "context":"continuous-integration/gitlab-ci"}'
  except:
    - trigger
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'
  artifacts:
    paths:
      - coverage_html
    expire_in: 1 week
  tags:
    - Windows

deployment:
  stage: deploy
  script:
    - curl -X POST -H "Content-Type:application/json" -H "Authorization:token %GITHUB_TOKEN%" https://api.github.com/repos/%GITHUB_ORG%/%GITHUB_REPO_NAME%/statuses/%CI_COMMIT_SHA% --data '{"state":"pending", "target_url":"https://git.aquaveo.com", "description":"Gitlab is processing the commit", "context":"continuous-integration/gitlab-ci"}'
    - pip.exe install devpi-client
    - devpi use %DEVPI_URL%
    - devpi login %DEVPI_USER% --password %DEVPI_PASS%
    - devpi upload --no-vcs --formats sdist
    - curl -X POST -H "Content-Type:application/json" -H "Authorization:token %GITHUB_TOKEN%" https://api.github.com/repos/%GITHUB_ORG%/%GITHUB_REPO_NAME%/statuses/%CI_COMMIT_SHA% --data '{"state":"success", "target_url":"https://git.aquaveo.com", "description":"The build succeeded!", "context":"continuous-integration/gitlab-ci"}'
  only:
    - tags
  except:
    - trigger
  tags:
    - Windows