stages:
  - "Set Pending Github Status"
  - build
  - deploy
  - "Set Final Github Status"

variables:
  GITHUB_REPO_URL: "https://github.com/Aquaveo/harmonica.git"
  GITLAB_REPO_URL: "https://git.aquaveo.com/Aquaveo/model-executables/harmonica-mirror.git"
  GITHUB_ORG: "Aquaveo"
  GITHUB_REPO_NAME: "harmonica"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/pip-cache"
  PYTHON: C:\\Python36

cache:
  paths:
    - "$CI_PROJECT_DIR/pip-cache"
  key: "$CI_PROJECT_ID"

"Send Pending Status":
  stage: "Set Pending Github Status"
  image: curlimages/curl:7.70.0
  script:
    - curl -X POST -H "Content-Type:application/json" -H "Authorization:token $GITHUB_TOKEN" "https://api.github.com/repos/$GITHUB_ORG/$GITHUB_REPO_NAME/statuses/$CI_COMMIT_SHA" --data "{\"state\":\"pending\", \"target_url\":\"$CI_JOB_URL\", \"description\":\"Gitlab is processing the commit\", \"context\":\"ci/gitlab\"}"

build:
  stage: build
  variables:
    PIP_INDEX_URL: "https://public.aquapi.aquaveo.com/aquaveo/stable"
  script:
    - pip.exe install coverage
    - pip.exe install -e .
    - coverage run --omit=tests/*,harmonica/cli/*,harmonica/data/*,harmonica/examples/*,*__init__.py --source=harmonica setup.py test
    - coverage html -d coverage_html
    - coverage report --fail-under 10 -m --skip-covered
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'
  artifacts:
    paths:
      - coverage_html
    expire_in: 1 week
  tags:
    - Windows

deployment:
  stage: deploy
  script:
    - pip.exe install devpi-client
    - devpi use %DEVPI_URL%
    - devpi login %DEVPI_USER% --password %DEVPI_PASS%
    - devpi upload --no-vcs --formats sdist
  only:
    - tags
  tags:
    - Windows

"Send Success Status":
  stage: "Set Final Github Status"
  image: curlimages/curl:7.70.0
  script:
    - curl -X POST -H "Content-Type:application/json" -H "Authorization:token $GITHUB_TOKEN" "https://api.github.com/repos/$GITHUB_ORG/$GITHUB_REPO_NAME/statuses/$CI_COMMIT_SHA" --data "{\"state\":\"success\", \"target_url\":\"$CI_JOB_URL\", \"description\":\"The job succeeded\", \"context\":\"ci/gitlab\"}"
  when: on_success

"Send Failed Status":
  stage: "Set Final Github Status"
  image: curlimages/curl:7.70.0
  script:
    - curl -X POST -H "Content-Type:application/json" -H "Authorization:token $GITHUB_TOKEN" "https://api.github.com/repos/$GITHUB_ORG/$GITHUB_REPO_NAME/statuses/$CI_COMMIT_SHA" --data "{\"state\":\"failure\", \"target_url\":\"$CI_JOB_URL\", \"description\":\"The job failed\", \"context\":\"ci/gitlab\"}"
  when: on_failure

